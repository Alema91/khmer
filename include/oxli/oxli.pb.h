// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: include/oxli/oxli.proto

#ifndef PROTOBUF_include_2foxli_2foxli_2eproto__INCLUDED
#define PROTOBUF_include_2foxli_2foxli_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace oxli {
class PBComponent;
class PBComponentDefaultTypeInternal;
extern PBComponentDefaultTypeInternal _PBComponent_default_instance_;
class PBComponentMap;
class PBComponentMapDefaultTypeInternal;
extern PBComponentMapDefaultTypeInternal _PBComponentMap_default_instance_;
class PBHashtable;
class PBHashtableDefaultTypeInternal;
extern PBHashtableDefaultTypeInternal _PBHashtable_default_instance_;
class PBPartitioner;
class PBPartitionerDefaultTypeInternal;
extern PBPartitionerDefaultTypeInternal _PBPartitioner_default_instance_;
}  // namespace oxli

namespace oxli {

namespace protobuf_include_2foxli_2foxli_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_include_2foxli_2foxli_2eproto

enum PBHashtable_HashType {
  PBHashtable_HashType_NODEGRAPH = 0,
  PBHashtable_HashType_COUNTGRAPH = 1
};
bool PBHashtable_HashType_IsValid(int value);
const PBHashtable_HashType PBHashtable_HashType_HashType_MIN = PBHashtable_HashType_NODEGRAPH;
const PBHashtable_HashType PBHashtable_HashType_HashType_MAX = PBHashtable_HashType_COUNTGRAPH;
const int PBHashtable_HashType_HashType_ARRAYSIZE = PBHashtable_HashType_HashType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBHashtable_HashType_descriptor();
inline const ::std::string& PBHashtable_HashType_Name(PBHashtable_HashType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBHashtable_HashType_descriptor(), value);
}
inline bool PBHashtable_HashType_Parse(
    const ::std::string& name, PBHashtable_HashType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBHashtable_HashType>(
    PBHashtable_HashType_descriptor(), name, value);
}
// ===================================================================

class PBComponent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oxli.PBComponent) */ {
 public:
  PBComponent();
  virtual ~PBComponent();

  PBComponent(const PBComponent& from);

  inline PBComponent& operator=(const PBComponent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBComponent& default_instance();

  static inline const PBComponent* internal_default_instance() {
    return reinterpret_cast<const PBComponent*>(
               &_PBComponent_default_instance_);
  }

  void Swap(PBComponent* other);

  // implements Message ----------------------------------------------

  inline PBComponent* New() const PROTOBUF_FINAL { return New(NULL); }

  PBComponent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBComponent& from);
  void MergeFrom(const PBComponent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBComponent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 tags = 2;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 2;
  ::google::protobuf::uint64 tags(int index) const;
  void set_tags(int index, ::google::protobuf::uint64 value);
  void add_tags(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      tags() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_tags();

  // required uint64 component_id = 1;
  bool has_component_id() const;
  void clear_component_id();
  static const int kComponentIdFieldNumber = 1;
  ::google::protobuf::uint64 component_id() const;
  void set_component_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:oxli.PBComponent)
 private:
  void set_has_component_id();
  void clear_has_component_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > tags_;
  ::google::protobuf::uint64 component_id_;
  friend struct  protobuf_include_2foxli_2foxli_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBComponentMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oxli.PBComponentMap) */ {
 public:
  PBComponentMap();
  virtual ~PBComponentMap();

  PBComponentMap(const PBComponentMap& from);

  inline PBComponentMap& operator=(const PBComponentMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBComponentMap& default_instance();

  static inline const PBComponentMap* internal_default_instance() {
    return reinterpret_cast<const PBComponentMap*>(
               &_PBComponentMap_default_instance_);
  }

  void Swap(PBComponentMap* other);

  // implements Message ----------------------------------------------

  inline PBComponentMap* New() const PROTOBUF_FINAL { return New(NULL); }

  PBComponentMap* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBComponentMap& from);
  void MergeFrom(const PBComponentMap& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBComponentMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .oxli.PBComponent components = 3;
  int components_size() const;
  void clear_components();
  static const int kComponentsFieldNumber = 3;
  const ::oxli::PBComponent& components(int index) const;
  ::oxli::PBComponent* mutable_components(int index);
  ::oxli::PBComponent* add_components();
  ::google::protobuf::RepeatedPtrField< ::oxli::PBComponent >*
      mutable_components();
  const ::google::protobuf::RepeatedPtrField< ::oxli::PBComponent >&
      components() const;

  // required uint64 n_components = 1;
  bool has_n_components() const;
  void clear_n_components();
  static const int kNComponentsFieldNumber = 1;
  ::google::protobuf::uint64 n_components() const;
  void set_n_components(::google::protobuf::uint64 value);

  // required uint64 component_counter = 2;
  bool has_component_counter() const;
  void clear_component_counter();
  static const int kComponentCounterFieldNumber = 2;
  ::google::protobuf::uint64 component_counter() const;
  void set_component_counter(::google::protobuf::uint64 value);

  // optional uint32 K = 4;
  bool has_k() const;
  void clear_k();
  static const int kKFieldNumber = 4;
  ::google::protobuf::uint32 k() const;
  void set_k(::google::protobuf::uint32 value);

  // optional uint32 n_tables = 5;
  bool has_n_tables() const;
  void clear_n_tables();
  static const int kNTablesFieldNumber = 5;
  ::google::protobuf::uint32 n_tables() const;
  void set_n_tables(::google::protobuf::uint32 value);

  // optional uint64 max_table_size = 6;
  bool has_max_table_size() const;
  void clear_max_table_size();
  static const int kMaxTableSizeFieldNumber = 6;
  ::google::protobuf::uint64 max_table_size() const;
  void set_max_table_size(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:oxli.PBComponentMap)
 private:
  void set_has_n_components();
  void clear_has_n_components();
  void set_has_component_counter();
  void clear_has_component_counter();
  void set_has_k();
  void clear_has_k();
  void set_has_n_tables();
  void clear_has_n_tables();
  void set_has_max_table_size();
  void clear_has_max_table_size();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::oxli::PBComponent > components_;
  ::google::protobuf::uint64 n_components_;
  ::google::protobuf::uint64 component_counter_;
  ::google::protobuf::uint32 k_;
  ::google::protobuf::uint32 n_tables_;
  ::google::protobuf::uint64 max_table_size_;
  friend struct  protobuf_include_2foxli_2foxli_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBHashtable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oxli.PBHashtable) */ {
 public:
  PBHashtable();
  virtual ~PBHashtable();

  PBHashtable(const PBHashtable& from);

  inline PBHashtable& operator=(const PBHashtable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBHashtable& default_instance();

  static inline const PBHashtable* internal_default_instance() {
    return reinterpret_cast<const PBHashtable*>(
               &_PBHashtable_default_instance_);
  }

  void Swap(PBHashtable* other);

  // implements Message ----------------------------------------------

  inline PBHashtable* New() const PROTOBUF_FINAL { return New(NULL); }

  PBHashtable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBHashtable& from);
  void MergeFrom(const PBHashtable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBHashtable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PBHashtable_HashType HashType;
  static const HashType NODEGRAPH =
    PBHashtable_HashType_NODEGRAPH;
  static const HashType COUNTGRAPH =
    PBHashtable_HashType_COUNTGRAPH;
  static inline bool HashType_IsValid(int value) {
    return PBHashtable_HashType_IsValid(value);
  }
  static const HashType HashType_MIN =
    PBHashtable_HashType_HashType_MIN;
  static const HashType HashType_MAX =
    PBHashtable_HashType_HashType_MAX;
  static const int HashType_ARRAYSIZE =
    PBHashtable_HashType_HashType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  HashType_descriptor() {
    return PBHashtable_HashType_descriptor();
  }
  static inline const ::std::string& HashType_Name(HashType value) {
    return PBHashtable_HashType_Name(value);
  }
  static inline bool HashType_Parse(const ::std::string& name,
      HashType* value) {
    return PBHashtable_HashType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string URI = 1;
  bool has_uri() const;
  void clear_uri();
  static const int kURIFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // required .oxli.PBHashtable.HashType type = 2 [default = COUNTGRAPH];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::oxli::PBHashtable_HashType type() const;
  void set_type(::oxli::PBHashtable_HashType value);

  // @@protoc_insertion_point(class_scope:oxli.PBHashtable)
 private:
  void set_has_uri();
  void clear_has_uri();
  void set_has_type();
  void clear_has_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  int type_;
  friend struct  protobuf_include_2foxli_2foxli_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBPartitioner : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oxli.PBPartitioner) */ {
 public:
  PBPartitioner();
  virtual ~PBPartitioner();

  PBPartitioner(const PBPartitioner& from);

  inline PBPartitioner& operator=(const PBPartitioner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPartitioner& default_instance();

  static inline const PBPartitioner* internal_default_instance() {
    return reinterpret_cast<const PBPartitioner*>(
               &_PBPartitioner_default_instance_);
  }

  void Swap(PBPartitioner* other);

  // implements Message ----------------------------------------------

  inline PBPartitioner* New() const PROTOBUF_FINAL { return New(NULL); }

  PBPartitioner* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBPartitioner& from);
  void MergeFrom(const PBPartitioner& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBPartitioner* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .oxli.PBComponentMap map = 3;
  bool has_map() const;
  void clear_map();
  static const int kMapFieldNumber = 3;
  const ::oxli::PBComponentMap& map() const;
  ::oxli::PBComponentMap* mutable_map();
  ::oxli::PBComponentMap* release_map();
  void set_allocated_map(::oxli::PBComponentMap* map);

  // required .oxli.PBHashtable graph = 4;
  bool has_graph() const;
  void clear_graph();
  static const int kGraphFieldNumber = 4;
  const ::oxli::PBHashtable& graph() const;
  ::oxli::PBHashtable* mutable_graph();
  ::oxli::PBHashtable* release_graph();
  void set_allocated_graph(::oxli::PBHashtable* graph);

  // required uint32 tag_density = 1;
  bool has_tag_density() const;
  void clear_tag_density();
  static const int kTagDensityFieldNumber = 1;
  ::google::protobuf::uint32 tag_density() const;
  void set_tag_density(::google::protobuf::uint32 value);

  // optional uint32 n_consumed = 2;
  bool has_n_consumed() const;
  void clear_n_consumed();
  static const int kNConsumedFieldNumber = 2;
  ::google::protobuf::uint32 n_consumed() const;
  void set_n_consumed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:oxli.PBPartitioner)
 private:
  void set_has_tag_density();
  void clear_has_tag_density();
  void set_has_n_consumed();
  void clear_has_n_consumed();
  void set_has_map();
  void clear_has_map();
  void set_has_graph();
  void clear_has_graph();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::oxli::PBComponentMap* map_;
  ::oxli::PBHashtable* graph_;
  ::google::protobuf::uint32 tag_density_;
  ::google::protobuf::uint32 n_consumed_;
  friend struct  protobuf_include_2foxli_2foxli_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PBComponent

// required uint64 component_id = 1;
inline bool PBComponent::has_component_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBComponent::set_has_component_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBComponent::clear_has_component_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBComponent::clear_component_id() {
  component_id_ = GOOGLE_ULONGLONG(0);
  clear_has_component_id();
}
inline ::google::protobuf::uint64 PBComponent::component_id() const {
  // @@protoc_insertion_point(field_get:oxli.PBComponent.component_id)
  return component_id_;
}
inline void PBComponent::set_component_id(::google::protobuf::uint64 value) {
  set_has_component_id();
  component_id_ = value;
  // @@protoc_insertion_point(field_set:oxli.PBComponent.component_id)
}

// repeated uint64 tags = 2;
inline int PBComponent::tags_size() const {
  return tags_.size();
}
inline void PBComponent::clear_tags() {
  tags_.Clear();
}
inline ::google::protobuf::uint64 PBComponent::tags(int index) const {
  // @@protoc_insertion_point(field_get:oxli.PBComponent.tags)
  return tags_.Get(index);
}
inline void PBComponent::set_tags(int index, ::google::protobuf::uint64 value) {
  tags_.Set(index, value);
  // @@protoc_insertion_point(field_set:oxli.PBComponent.tags)
}
inline void PBComponent::add_tags(::google::protobuf::uint64 value) {
  tags_.Add(value);
  // @@protoc_insertion_point(field_add:oxli.PBComponent.tags)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PBComponent::tags() const {
  // @@protoc_insertion_point(field_list:oxli.PBComponent.tags)
  return tags_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PBComponent::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:oxli.PBComponent.tags)
  return &tags_;
}

// -------------------------------------------------------------------

// PBComponentMap

// required uint64 n_components = 1;
inline bool PBComponentMap::has_n_components() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBComponentMap::set_has_n_components() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBComponentMap::clear_has_n_components() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBComponentMap::clear_n_components() {
  n_components_ = GOOGLE_ULONGLONG(0);
  clear_has_n_components();
}
inline ::google::protobuf::uint64 PBComponentMap::n_components() const {
  // @@protoc_insertion_point(field_get:oxli.PBComponentMap.n_components)
  return n_components_;
}
inline void PBComponentMap::set_n_components(::google::protobuf::uint64 value) {
  set_has_n_components();
  n_components_ = value;
  // @@protoc_insertion_point(field_set:oxli.PBComponentMap.n_components)
}

// required uint64 component_counter = 2;
inline bool PBComponentMap::has_component_counter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBComponentMap::set_has_component_counter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBComponentMap::clear_has_component_counter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBComponentMap::clear_component_counter() {
  component_counter_ = GOOGLE_ULONGLONG(0);
  clear_has_component_counter();
}
inline ::google::protobuf::uint64 PBComponentMap::component_counter() const {
  // @@protoc_insertion_point(field_get:oxli.PBComponentMap.component_counter)
  return component_counter_;
}
inline void PBComponentMap::set_component_counter(::google::protobuf::uint64 value) {
  set_has_component_counter();
  component_counter_ = value;
  // @@protoc_insertion_point(field_set:oxli.PBComponentMap.component_counter)
}

// repeated .oxli.PBComponent components = 3;
inline int PBComponentMap::components_size() const {
  return components_.size();
}
inline void PBComponentMap::clear_components() {
  components_.Clear();
}
inline const ::oxli::PBComponent& PBComponentMap::components(int index) const {
  // @@protoc_insertion_point(field_get:oxli.PBComponentMap.components)
  return components_.Get(index);
}
inline ::oxli::PBComponent* PBComponentMap::mutable_components(int index) {
  // @@protoc_insertion_point(field_mutable:oxli.PBComponentMap.components)
  return components_.Mutable(index);
}
inline ::oxli::PBComponent* PBComponentMap::add_components() {
  // @@protoc_insertion_point(field_add:oxli.PBComponentMap.components)
  return components_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::oxli::PBComponent >*
PBComponentMap::mutable_components() {
  // @@protoc_insertion_point(field_mutable_list:oxli.PBComponentMap.components)
  return &components_;
}
inline const ::google::protobuf::RepeatedPtrField< ::oxli::PBComponent >&
PBComponentMap::components() const {
  // @@protoc_insertion_point(field_list:oxli.PBComponentMap.components)
  return components_;
}

// optional uint32 K = 4;
inline bool PBComponentMap::has_k() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBComponentMap::set_has_k() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBComponentMap::clear_has_k() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBComponentMap::clear_k() {
  k_ = 0u;
  clear_has_k();
}
inline ::google::protobuf::uint32 PBComponentMap::k() const {
  // @@protoc_insertion_point(field_get:oxli.PBComponentMap.K)
  return k_;
}
inline void PBComponentMap::set_k(::google::protobuf::uint32 value) {
  set_has_k();
  k_ = value;
  // @@protoc_insertion_point(field_set:oxli.PBComponentMap.K)
}

// optional uint32 n_tables = 5;
inline bool PBComponentMap::has_n_tables() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBComponentMap::set_has_n_tables() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBComponentMap::clear_has_n_tables() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBComponentMap::clear_n_tables() {
  n_tables_ = 0u;
  clear_has_n_tables();
}
inline ::google::protobuf::uint32 PBComponentMap::n_tables() const {
  // @@protoc_insertion_point(field_get:oxli.PBComponentMap.n_tables)
  return n_tables_;
}
inline void PBComponentMap::set_n_tables(::google::protobuf::uint32 value) {
  set_has_n_tables();
  n_tables_ = value;
  // @@protoc_insertion_point(field_set:oxli.PBComponentMap.n_tables)
}

// optional uint64 max_table_size = 6;
inline bool PBComponentMap::has_max_table_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBComponentMap::set_has_max_table_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBComponentMap::clear_has_max_table_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBComponentMap::clear_max_table_size() {
  max_table_size_ = GOOGLE_ULONGLONG(0);
  clear_has_max_table_size();
}
inline ::google::protobuf::uint64 PBComponentMap::max_table_size() const {
  // @@protoc_insertion_point(field_get:oxli.PBComponentMap.max_table_size)
  return max_table_size_;
}
inline void PBComponentMap::set_max_table_size(::google::protobuf::uint64 value) {
  set_has_max_table_size();
  max_table_size_ = value;
  // @@protoc_insertion_point(field_set:oxli.PBComponentMap.max_table_size)
}

// -------------------------------------------------------------------

// PBHashtable

// required string URI = 1;
inline bool PBHashtable::has_uri() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBHashtable::set_has_uri() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBHashtable::clear_has_uri() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBHashtable::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uri();
}
inline const ::std::string& PBHashtable::uri() const {
  // @@protoc_insertion_point(field_get:oxli.PBHashtable.URI)
  return uri_.GetNoArena();
}
inline void PBHashtable::set_uri(const ::std::string& value) {
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oxli.PBHashtable.URI)
}
#if LANG_CXX11
inline void PBHashtable::set_uri(::std::string&& value) {
  set_has_uri();
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oxli.PBHashtable.URI)
}
#endif
inline void PBHashtable::set_uri(const char* value) {
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oxli.PBHashtable.URI)
}
inline void PBHashtable::set_uri(const char* value, size_t size) {
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oxli.PBHashtable.URI)
}
inline ::std::string* PBHashtable::mutable_uri() {
  set_has_uri();
  // @@protoc_insertion_point(field_mutable:oxli.PBHashtable.URI)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBHashtable::release_uri() {
  // @@protoc_insertion_point(field_release:oxli.PBHashtable.URI)
  clear_has_uri();
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBHashtable::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    set_has_uri();
  } else {
    clear_has_uri();
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:oxli.PBHashtable.URI)
}

// required .oxli.PBHashtable.HashType type = 2 [default = COUNTGRAPH];
inline bool PBHashtable::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBHashtable::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBHashtable::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBHashtable::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::oxli::PBHashtable_HashType PBHashtable::type() const {
  // @@protoc_insertion_point(field_get:oxli.PBHashtable.type)
  return static_cast< ::oxli::PBHashtable_HashType >(type_);
}
inline void PBHashtable::set_type(::oxli::PBHashtable_HashType value) {
  assert(::oxli::PBHashtable_HashType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:oxli.PBHashtable.type)
}

// -------------------------------------------------------------------

// PBPartitioner

// required uint32 tag_density = 1;
inline bool PBPartitioner::has_tag_density() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPartitioner::set_has_tag_density() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPartitioner::clear_has_tag_density() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPartitioner::clear_tag_density() {
  tag_density_ = 0u;
  clear_has_tag_density();
}
inline ::google::protobuf::uint32 PBPartitioner::tag_density() const {
  // @@protoc_insertion_point(field_get:oxli.PBPartitioner.tag_density)
  return tag_density_;
}
inline void PBPartitioner::set_tag_density(::google::protobuf::uint32 value) {
  set_has_tag_density();
  tag_density_ = value;
  // @@protoc_insertion_point(field_set:oxli.PBPartitioner.tag_density)
}

// optional uint32 n_consumed = 2;
inline bool PBPartitioner::has_n_consumed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBPartitioner::set_has_n_consumed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBPartitioner::clear_has_n_consumed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBPartitioner::clear_n_consumed() {
  n_consumed_ = 0u;
  clear_has_n_consumed();
}
inline ::google::protobuf::uint32 PBPartitioner::n_consumed() const {
  // @@protoc_insertion_point(field_get:oxli.PBPartitioner.n_consumed)
  return n_consumed_;
}
inline void PBPartitioner::set_n_consumed(::google::protobuf::uint32 value) {
  set_has_n_consumed();
  n_consumed_ = value;
  // @@protoc_insertion_point(field_set:oxli.PBPartitioner.n_consumed)
}

// required .oxli.PBComponentMap map = 3;
inline bool PBPartitioner::has_map() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPartitioner::set_has_map() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPartitioner::clear_has_map() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPartitioner::clear_map() {
  if (map_ != NULL) map_->::oxli::PBComponentMap::Clear();
  clear_has_map();
}
inline const ::oxli::PBComponentMap& PBPartitioner::map() const {
  // @@protoc_insertion_point(field_get:oxli.PBPartitioner.map)
  return map_ != NULL ? *map_
                         : *::oxli::PBComponentMap::internal_default_instance();
}
inline ::oxli::PBComponentMap* PBPartitioner::mutable_map() {
  set_has_map();
  if (map_ == NULL) {
    map_ = new ::oxli::PBComponentMap;
  }
  // @@protoc_insertion_point(field_mutable:oxli.PBPartitioner.map)
  return map_;
}
inline ::oxli::PBComponentMap* PBPartitioner::release_map() {
  // @@protoc_insertion_point(field_release:oxli.PBPartitioner.map)
  clear_has_map();
  ::oxli::PBComponentMap* temp = map_;
  map_ = NULL;
  return temp;
}
inline void PBPartitioner::set_allocated_map(::oxli::PBComponentMap* map) {
  delete map_;
  map_ = map;
  if (map) {
    set_has_map();
  } else {
    clear_has_map();
  }
  // @@protoc_insertion_point(field_set_allocated:oxli.PBPartitioner.map)
}

// required .oxli.PBHashtable graph = 4;
inline bool PBPartitioner::has_graph() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPartitioner::set_has_graph() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPartitioner::clear_has_graph() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPartitioner::clear_graph() {
  if (graph_ != NULL) graph_->::oxli::PBHashtable::Clear();
  clear_has_graph();
}
inline const ::oxli::PBHashtable& PBPartitioner::graph() const {
  // @@protoc_insertion_point(field_get:oxli.PBPartitioner.graph)
  return graph_ != NULL ? *graph_
                         : *::oxli::PBHashtable::internal_default_instance();
}
inline ::oxli::PBHashtable* PBPartitioner::mutable_graph() {
  set_has_graph();
  if (graph_ == NULL) {
    graph_ = new ::oxli::PBHashtable;
  }
  // @@protoc_insertion_point(field_mutable:oxli.PBPartitioner.graph)
  return graph_;
}
inline ::oxli::PBHashtable* PBPartitioner::release_graph() {
  // @@protoc_insertion_point(field_release:oxli.PBPartitioner.graph)
  clear_has_graph();
  ::oxli::PBHashtable* temp = graph_;
  graph_ = NULL;
  return temp;
}
inline void PBPartitioner::set_allocated_graph(::oxli::PBHashtable* graph) {
  delete graph_;
  graph_ = graph;
  if (graph) {
    set_has_graph();
  } else {
    clear_has_graph();
  }
  // @@protoc_insertion_point(field_set_allocated:oxli.PBPartitioner.graph)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace oxli

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::oxli::PBHashtable_HashType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::oxli::PBHashtable_HashType>() {
  return ::oxli::PBHashtable_HashType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_include_2foxli_2foxli_2eproto__INCLUDED
